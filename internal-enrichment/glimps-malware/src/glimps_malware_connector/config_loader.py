import os
from pathlib import Path

import yaml
from pycti import get_config_variable


class GLIMPSMalwareConfig:
    def __init__(self):
        """Load configuration file"""
        self.load = self._load_config()
        self._initialize_configurations()

    @staticmethod
    def _load_config() -> dict:
        config_file_path = Path(__file__).parents[1].joinpath("config.yml")
        config = (
            yaml.load(open(config_file_path), Loader=yaml.FullLoader)
            if os.path.isfile(config_file_path)
            else {}
        )
        return config

    def _initialize_configurations(self) -> None:
        # OpenCTI configurations
        self.max_tlp = get_config_variable(
            "GLIMPS_MAX_TLP", ["glimps", "max_tlp"], self.load, default="TLP:AMBER"
        )

        # Connector extra params
        self.gdetect_url = get_config_variable(
            "GLIMPS_URL", ["glimps", "url"], self.load, required=True
        )
        self.gdetect_token = get_config_variable(
            "GLIMPS_TOKEN", ["glimps", "token"], self.load, required=True
        )
        self.gdetect_insecure = get_config_variable(
            "GLIMPS_INSECURE", ["glimps", "insecure"], self.load, default=False
        )
        self.gdetect_timeout = get_config_variable(
            "GLIMPS_ANALYSIS_TIMEOUT",
            ["glimps", "analysis_timeout"],
            self.load,
            isNumber=True,
            default=180,
        )

        if self.gdetect_timeout < 1:
            self.gdetect_timeout = 180

        self.gdetect_raw_tags = get_config_variable(
            "GLIMPS_TAGS", ["glimps", "tags"], self.load, default="opencti"
        )
