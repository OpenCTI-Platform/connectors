import json
from pathlib import Path
from unittest.mock import Mock

import pytest
from connectors_sdk.models.octi import Note, Report, Vulnerability
from rf_client.models import VulnerabilityEnrichment
from rflib.use_cases.enrich_vulnerability import VulnerabilityEnricher


def get_data_sample(file_name):
    file_path = Path(__file__).parents[2].joinpath("data_samples", file_name)
    with open(file_path, encoding="utf-8") as f:
        data = json.load(f)
    return VulnerabilityEnrichment(**data["data"])


@pytest.fixture
def mock_enricher() -> VulnerabilityEnricher:
    helper = Mock()
    helper.connector_logger = Mock()

    return VulnerabilityEnricher(helper=helper, tlp_level="red")


def test_vulnerability_enricher_processes_vulnerability(
    mock_enricher: VulnerabilityEnricher,
):
    octi_vulnerability_data = {"name": "CVE-2025-21204"}
    vulnerability_enrichment = get_data_sample("vulnerability_enrichment.json")

    stix_objects = mock_enricher.process_vulnerability_enrichment(
        octi_vulnerability_data=octi_vulnerability_data,
        vulnerability_enrichment=vulnerability_enrichment,
    )

    assert any(
        [
            stix_object
            for stix_object in stix_objects
            if isinstance(stix_object, Vulnerability)
        ]
    )
    assert any(
        [stix_object for stix_object in stix_objects if isinstance(stix_object, Report)]
    )
    assert any(
        [stix_object for stix_object in stix_objects if isinstance(stix_object, Note)]
    )
