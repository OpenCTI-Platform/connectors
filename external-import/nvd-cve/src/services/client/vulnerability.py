from .api import CVEClient

from .endpoints import BASE_URL


class CVEVulnerability(CVEClient):

    def get_vulnerabilities(self, start_index=None, results_per_page=None):
        """
        :return: A list of dicts of CVE
        """
        cve_collection = self.get_complete_collection(0, 2000)

        page_size = cve_collection["resultsPerPage"]
        total_items = cve_collection["totalResults"]
        cve_vulnerabilities_total = []
        offset = 0

        while offset < total_items:
            offset = offset + page_size
            cve_collection = self.get_complete_collection(offset, page_size)
            cve_vulnerabilities_filtered = []

            cve_vulnerabilities = cve_collection["vulnerabilities"]
            for cve_vulnerability in cve_vulnerabilities:
                metric_exist = cve_vulnerability["cve"]["metrics"]
                if metric_exist:
                    for key, value in metric_exist.items():
                        if key == 'cvssMetricV31':
                            cve_vulnerabilities_filtered.append(cve_vulnerability)

            info_msg = f"[API] Getting {len(cve_vulnerabilities_filtered)} vulnerabilities"
            self.helper.log_info(info_msg)
            cve_vulnerabilities_total += cve_vulnerabilities_filtered
            # TODO Send bundle per page ? Or not ?

        info_msg = f"[API] Getting {len(cve_vulnerabilities_total)} vulnerabilities in total"
        self.helper.log_info(info_msg)

        return cve_vulnerabilities_total
