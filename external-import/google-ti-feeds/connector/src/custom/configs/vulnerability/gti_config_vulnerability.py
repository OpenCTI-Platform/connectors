"""GTI configuration for vulnerabilities.

This module defines configuration settings specific to GTI vulnerability imports.
"""

from datetime import timedelta
from typing import List

from connector.src.custom.configs.gti_config_common import (
    ALLOWED_ORIGINS,
    GTIBaseConfig,
    validate_origins_list,
)
from pydantic import Field, field_validator


class GTIVulnerabilityConfig(GTIBaseConfig):
    """Configuration for GTI vulnerability imports."""

    vulnerability_import_start_date: timedelta = Field(
        default=timedelta(days=1),
        description="ISO 8601 duration string specifying how far back to import vulnerabilities (e.g., P1D for 1 day, P7D for 7 days)",
    )

    import_vulnerabilities: bool = Field(
        default=False,
        description="Whether to enable importing vulnerability data from GTI",
    )

    vulnerability_get_related_softwares: bool = Field(
        default=False,
        description="Whether to enable importing related software data from vulnerability data",
    )

    vulnerability_origins: List[str] | str = Field(
        default="All",
        description="Comma-separated list of vulnerability origins to import, or 'All' for all origins. "
        f"Allowed values: {', '.join(ALLOWED_ORIGINS)}",
        examples=["All", "partner,google threat intelligence", "crowdsourced"],
    )

    @field_validator("vulnerability_origins", mode="before")
    @classmethod
    def split_and_validate_vulnerability_origins(cls, v: str) -> List[str]:
        """Split and validate a comma-separated string into a list and validate its contents."""
        return validate_origins_list(v, "vulnerability origin", ALLOWED_ORIGINS)
