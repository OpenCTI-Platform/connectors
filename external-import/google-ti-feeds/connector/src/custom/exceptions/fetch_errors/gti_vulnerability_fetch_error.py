"""Exception for errors when fetching vulnerabilities from Google Threat Intelligence API."""

from typing import Any, Optional

from connector.src.custom.exceptions.fetch_errors.gti_api_error import GTIApiError


class GTIVulnerabilityFetchError(GTIApiError):
    """Exception raised when there's an error fetching vulnerabilities from GTI API."""

    def __init__(
        self,
        message: str,
        vulnerability_id: Optional[str] = None,
        cve_id: Optional[str] = None,
        endpoint: Optional[str] = None,
        status_code: Optional[str] = None,
        details: Optional[dict[str, Any]] = None,
    ):
        """Initialize the exception.

        Args:
            message: Error message
            vulnerability_id: ID of the vulnerability that failed to fetch, if applicable
            cve_id: CVE ID of the vulnerability, if available
            endpoint: API endpoint where the error occurred
            status_code: HTTP status code, if available
            details: Additional details about the error

        """
        if vulnerability_id and cve_id:
            error_msg = "Error fetching vulnerability: {message}"
        elif vulnerability_id:
            error_msg = "Error fetching vulnerability: {message}"
        elif cve_id:
            error_msg = "Error fetching vulnerability: {message}"
        else:
            error_msg = "Error fetching vulnerabilities: {message}"

        super().__init__(error_msg, status_code, endpoint, details)
        self.vulnerability_id = vulnerability_id
        self.cve_id = cve_id

        # Add structured data for logging
        if hasattr(self, "structured_data"):
            if vulnerability_id:
                self.structured_data["vulnerability_id"] = vulnerability_id
            if cve_id:
                self.structured_data["cve_id"] = cve_id
        else:
            self.structured_data = {}
            if vulnerability_id:
                self.structured_data["vulnerability_id"] = vulnerability_id
            if cve_id:
                self.structured_data["cve_id"] = cve_id
