"""Exception for errors when converting GTI vulnerabilities to STIX vulnerability objects."""

from typing import Optional

from connector.src.custom.exceptions.convert_errors.gti_entity_conversion_error import (
    GTIEntityConversionError,
)


class GTIVulnerabilityConversionError(GTIEntityConversionError):
    """Exception raised when there's an error converting a GTI vulnerability to STIX format."""

    def __init__(
        self, message: str, vuln_id: Optional[str] = None, cve_id: Optional[str] = None
    ):
        """Initialize the exception.

        Args:
            message: Error message
            vuln_id: ID of the vulnerability that failed to convert
            cve_id: CVE ID of the vulnerability, if available

        """
        super().__init__(message, vuln_id, "Vulnerability")
        self.cve_id = cve_id

        # Add structured data for logging
        if hasattr(self, "structured_data"):
            if cve_id:
                self.structured_data["cve_id"] = cve_id
        else:
            self.structured_data = {}
            if cve_id:
                self.structured_data["cve_id"] = cve_id
