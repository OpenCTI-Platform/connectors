"""Model representing a Google Threat Intelligence Vulnerability."""

from typing import Dict, List, Optional, Union

from pydantic import BaseModel, Field


class CvssV3(BaseModel):
    """Model representing the CVSS v3 scoring data."""

    attack_complexity: Optional[str] = Field(
        None, description="Attack complexity rating."
    )
    attack_vector: Optional[str] = Field(None, description="Attack vector description.")
    availability_impact: Optional[str] = Field(
        None, description="Impact on availability."
    )
    base_score: Optional[float] = Field(None, description="CVSS v3 base score.")
    confidentiality_impact: Optional[str] = Field(
        None, description="Impact on confidentiality."
    )
    integrity_impact: Optional[str] = Field(None, description="Impact on integrity.")
    privileges_required: Optional[str] = Field(
        None, description="Required privileges level."
    )
    scope: Optional[str] = Field(None, description="Scope of the vulnerability.")
    user_interaction: Optional[str] = Field(
        None, description="Required user interaction."
    )
    vector_string: Optional[str] = Field(None, description="CVSS vector string.")


class Cvss(BaseModel):
    """Model representing the CVSS data."""

    cvssv3: Optional[CvssV3] = Field(None, description="CVSS v3 scoring data.")


class Epss(BaseModel):
    """Model representing the EPSS data."""

    score: Optional[float] = Field(None, description="EPSS score.")
    percentile: Optional[float] = Field(None, description="EPSS percentile.")


class VulnerabilityModel(BaseModel):
    """Model representing a Google Threat Intelligence Vulnerability."""

    name: str = Field(..., description="Vulnerability's name.")
    creation_date: int = Field(
        ..., description="Creation date of the vulnerability (UTC timestamp)."
    )
    cvss: Optional[Cvss] = Field(None, description="CVSS scoring data.")
    epss: Optional[Epss] = Field(None, description="EPSS data.")
    link: Optional[str] = Field(None, description="URL of the vulnerability.")
    last_modification_date: int = Field(
        ..., description="Date when the vulnerability was last updated (UTC timestamp)."
    )
    description: Optional[str] = Field(None, description="Vulnerability's description.")
    private: bool = Field(
        False, description="Whether the vulnerability object is private."
    )


class GTIVulnerabilityData(BaseModel):
    """Model representing data for a GTI vulnerability."""

    id: str
    type: str = Field("vulnerability")
    links: Optional[Dict[str, str]] = None
    attributes: Optional[VulnerabilityModel] = None


class GTIVulnerabilityReference(BaseModel):
    """Model representing a reference to a GTI vulnerability (without full attributes)."""

    id: str
    type: str


class GTIVulnerabilityResponse(BaseModel):
    """Model representing a response containing GTI vulnerability data."""

    data: Union[
        GTIVulnerabilityData,
        List[Union[GTIVulnerabilityData, GTIVulnerabilityReference]],
    ]
