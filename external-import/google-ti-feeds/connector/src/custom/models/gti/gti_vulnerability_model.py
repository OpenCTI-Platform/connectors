"""Model representing a Google Threat Intelligence Vulnerability."""

from typing import Any

from pydantic import BaseModel, Field, model_validator


class CvssV2(BaseModel):
    """Model representing a CVSS v2 score."""

    base_score: float | None = Field(None, description="CVSS v2 base score.")
    temporal_score: float | None = Field(None, description="CVSS v2 temporal score.")
    vector: str | None = Field(None, description="CVSS v2 vector string.")


class CvssV3(BaseModel):
    """Model representing a CVSS v3 score."""

    attack_complexity: str | None = Field(None, description="Attack complexity rating.")
    attack_vector: str | None = Field(None, description="Attack vector description.")
    availability_impact: str | None = Field(None, description="Impact on availability.")
    base_score: float | None = Field(None, description="CVSS v3 base score.")
    confidentiality_impact: str | None = Field(
        None, description="Impact on confidentiality."
    )
    integrity_impact: str | None = Field(None, description="Impact on integrity.")
    privileges_required: str | None = Field(
        None, description="Required privileges level."
    )
    scope: str | None = Field(None, description="Scope of the vulnerability.")
    user_interaction: str | None = Field(None, description="Required user interaction.")
    vector: str | None = Field(None, description="CVSS vector string.")
    temporal_score: float | None = Field(None, description="CVSS v3 temporal score.")


class CvssV4Supplemental(BaseModel):
    """Model representing a CVSS v4 supplemental score."""

    automatable: str | None = Field(None, description="CVSSv4 'Automatable' metric.")
    provider_urgency: str | None = Field(
        None, description="CVSSv4 'Provider Urgency' metric."
    )
    recovery: str | None = Field(None, description="CVSSv4 'Recovery' metric.")
    response_effort: str | None = Field(
        None, description="CVSSv4 'Vulnerability Response Effort' metric."
    )
    safety: str | None = Field(None, description="CVSSv4 'Safety' metric.")
    value_density: str | None = Field(
        None, description="CVSSv4 'Value Density' metric."
    )


class CvssV4Threat(BaseModel):
    """Model representing a CVSS v4 threat score."""

    exploit_maturity: str | None = Field(
        None, description="CVSSv4 'Exploit Maturity' metric."
    )


class CvssV4(BaseModel):
    """Model representing a CVSS v4 score."""

    score: float | None = Field(None, description="CVSSv4-BT score.")
    vector: str | None = Field(None, description="Full vector of CVSSv4.")
    supplemental: CvssV4Supplemental | None = Field(
        None, description="CVSSv4 supplemental object."
    )
    threat: CvssV4Threat | None = Field(None, description="CVSSv4 threat object.")


class Cvss(BaseModel):
    """Model representing a CVSS score."""

    cvssv2_0: CvssV2 | None = Field(None, description="CVSS v2.0 object.")
    cvssv3_x: CvssV3 | None = Field(None, description="CVSS v3.x vector object.")
    cvssv3_x_translated: CvssV3 | None = Field(
        None, description="CVSS v3.x vector translated from CVSSv4."
    )
    cvssv4_x: CvssV4 | None = Field(None, description="CVSS v4.x object.")


class Epss(BaseModel):
    """Model representing an EPSS score."""

    score: float | None = Field(
        None, description="Probability of exploitation in the next 30 days."
    )
    percentile: float | None = Field(
        None, description="Percentile of EPSS score in the data."
    )


class Cwe(BaseModel):
    """Model representing a Common Weakness Enumeration (CWE) entry."""

    id: str | None = Field(None, description="CWE identifier of the vulnerability.")
    title: str | None = Field(
        None, description="CWE title or name of the vulnerability."
    )


class AggregationValue(BaseModel):
    """Model representing a value of an aggregation."""

    value: str | dict[str, Any] | int | float | list[Any] | Any = Field(
        None, description="Value of the aggregation."
    )
    count: int | None = Field(
        None, description="Number of occurrences of the aggregation value."
    )
    prevalence: float | None = Field(
        None, description="Prevalence of the aggregation value."
    )


class SourceDetail(BaseModel):
    """Model representing details about the sources related to the vulnerability."""

    source_names: list[str] | None = Field(
        None, description="Names of the sources related to the vulnerability."
    )


class Counters(BaseModel):
    """dictionary of counters of related objects."""

    attack_techniques: int | None = Field(
        None,
        description="Number of MITRE ATT&CK techniques associated with the vulnerability.",
    )
    domains: int | None = Field(
        None, description="Number of domains related to the vulnerability."
    )
    files: int | None = Field(
        None, description="Number of files related to the vulnerability."
    )
    iocs: int | None = Field(
        None,
        description="Number of IoCs (files + URLs + domains + IP addresses) related to the vulnerability.",
    )
    ip_addresses: int | None = Field(
        None, description="Number of IP addresses related to the vulnerability."
    )
    subscribers: int | None = Field(
        None, description="Number of users subscribed to the vulnerability."
    )
    urls: int | None = Field(
        None, description="Number of URLs related to the vulnerability."
    )


class SourceCvss(BaseModel):
    """CVSS information from a source."""

    cvssv2_0: CvssV2 | None = Field(
        None, description="CVSS v2.0 base score and vector."
    )
    cvssv3_x: CvssV3 | None = Field(
        None, description="CVSS v3.x base score and vector."
    )
    cvssv4_x: CvssV4 | None = Field(None, description="CVSS v4.x score and vector.")


class Source(BaseModel):
    """Information supplier."""

    name: str | None = Field(None, description="Supplier's name.")
    unique_id: str | None = Field(
        None, description="Unique identifier provided by the supplier."
    )
    md5: str | None = Field(
        None, description="MD5 of url/pdf of the source when it was collected."
    )
    title: str | None = Field(
        None,
        description="Title of the url/pdf from where the information was collected.",
    )
    source_description: str | None = Field(
        None,
        description="Description of the url/pdf from where the information was collected.",
    )
    published_date: int | None = Field(
        None,
        description="Datetime when the information was first published (UTC timestamp).",
    )
    url: str | None = Field(None, description="URL of the source of the information.")
    cvss: SourceCvss | None = Field(
        None, description="CVSS information from this source."
    )


class SourceRegion(BaseModel):
    """Country or region from which the vulnerability is known to originate."""

    confidence: str | None = Field(
        None, description="Confidence on the information related to the source region."
    )
    country: str | None = Field(
        None, description="Country from which vulnerability is known to originate."
    )
    country_iso2: str | None = Field(
        None, description="Source country in ISO 3166 Alpha2 code format."
    )
    description: str | None = Field(
        None, description="Additional information about the source region."
    )
    first_seen: int | None = Field(
        None,
        description="First time this source region was attributed to the vulnerability (UTC timestamp).",
    )
    last_seen: int | None = Field(
        None,
        description="Last time this source region was attributed to the vulnerability (UTC timestamp).",
    )
    region: str | None = Field(
        None, description="Region from which the vulnerability is known to originate."
    )
    source: str | None = Field(None, description="Information's supplier.")
    sub_region: str | None = Field(
        None,
        description="Subregion from which the vulnerability is known to originate.",
    )
    source_urls: list[str] | None = None


class CisaKnownExploited(BaseModel):
    """CISA Known Exploited Vulnerabilities."""

    added_date: int | None = Field(
        None, description="Date added to KEV (UTC timestamp)."
    )
    due_date: int | None = Field(
        None, description="Remediation due date (UTC timestamp)."
    )
    ransomware_use: str | None = Field(
        None, description="Usage in ransomware campaigns."
    )


class AltNameDetail(BaseModel):
    """Alternative name details."""

    confidence: str | None = Field(
        None, description="Confidence on attribution of the alternative name."
    )
    description: str | None = Field(
        None, description="Additional information about the alternative name."
    )
    first_seen: int | None = Field(
        None, description="First time this alt name was seen (UTC timestamp)."
    )
    last_seen: int | None = Field(
        None, description="Last time this alt name was seen (UTC timestamp)."
    )
    value: str | None = Field(None, description="The alternative name / alias.")


class CpeObject(BaseModel):
    """CPE object details."""

    product: str | None = Field(None, description="Product name.")
    uri: str | None = Field(None, description="CPE URI.")
    vendor: str | None = Field(None, description="Vendor name.")
    version: str | None = Field(None, description="Version of the product.")


class CpeRange(BaseModel):
    """CPE range details."""

    start_rel: str | None = Field(None, description="Start relationship operator.")
    end_rel: str | None = Field(None, description="End relationship operator.")
    start_cpe: CpeObject | None = Field(None, description="Start CPE object.")
    end_cpe: CpeObject | None = Field(None, description="End CPE object.")


class Aggregations(BaseModel):
    """Aggregation details."""

    domains: dict[str, Any] | None = Field(
        None, description="Technical commonalities among all related domains."
    )
    files: dict[str, Any] | None = Field(
        None, description="Technical commonalities among all related files."
    )
    ip_addresses: dict[str, Any] | None = Field(
        None, description="Technical commonalities among all related IP addresses."
    )
    urls: dict[str, Any] | None = Field(
        None, description="Technical commonalities among all related URLs."
    )


class VendorFixReference(BaseModel):
    """Vendor fix reference details."""

    cvss: str | None = Field(None, description="Associated CVSS score.")
    md5: str | None = Field(None, description="MD5 hash of the fix file.")
    name: str | None = Field(None, description="Supplier or vendor name.")
    published_date: int | None = Field(
        None, description="Publication date (UTC timestamp)."
    )
    source_description: str | None = Field(None, description="Fix description.")
    title: str | None = Field(None, description="Title of the fix's webpage or source.")
    unique_id: str | None = Field(None, description="Unique identifier of the fix.")
    url: str | None = Field(None, description="URL to the fix publication.")


class FieldSource(BaseModel):
    """Field source details."""

    field: str | None = Field(
        None, description="Field name being sourced (e.g. 'description', 'cwe')."
    )
    source: dict[str, str | list[str] | list[SourceDetail] | None] | None = Field(
        None, description="Information's supplier details."
    )


class TagDetail(BaseModel):
    """Tag detail information."""

    confidence: str | None = Field(
        None, description="Confidence level for tag attribution."
    )
    description: str | None = Field(
        None, description="Additional context about the tag."
    )
    first_seen: int | None = Field(
        None, description="When this tag was first seen (UTC timestamp)."
    )
    last_seen: int | None = Field(
        None, description="When this tag was last seen (UTC timestamp)."
    )
    value: str | None = Field(None, description="Tag value.")


class TargetedIndustry(BaseModel):
    """Targeted industry details."""

    confidence: str | None = Field(
        None, description="Confidence in industry targeting information."
    )
    description: str | None = Field(
        None, description="Additional info about industry targeted."
    )
    first_seen: int | None = Field(None, description="First time seen (UTC timestamp).")
    last_seen: int | None = Field(None, description="Last time seen (UTC timestamp).")
    source: str | None = Field(None, description="Information's supplier.")
    industry: str | None = Field(None, description="Sub-industry targeted.")
    industry_group: str | None = Field(None, description="Industry group targeted.")


class TargetedRegion(BaseModel):
    """Targeted region details."""

    confidence: str | None = Field(
        None, description="Confidence in regional targeting information."
    )
    country: str | None = Field(
        None, description="Country targeted by the vulnerability."
    )
    country_iso2: str | None = Field(
        None, description="Targeted country in ISO 3166 Alpha2 format."
    )
    description: str | None = Field(None, description="Additional context.")
    first_seen: int | None = Field(None, description="First time seen (UTC timestamp).")
    last_seen: int | None = Field(None, description="Last time seen (UTC timestamp).")
    region: str | None = Field(None, description="Region targeted.")
    sub_region: str | None = Field(None, description="Sub-region targeted.")
    source: str | None = Field(None, description="Information's supplier.")


class VersionHistoryEntry(BaseModel):
    """Version history entry details."""

    version_notes: list[str] | None = Field(
        None, description="New information around the vulnerability."
    )
    date: int | None = Field(
        None, description="Date when the information was added (UTC timestamp)."
    )


class ExplotationDetails(BaseModel):
    """Exploit details."""

    exploit_release_date: int | None = Field(
        None, description="First publicly available exploit date (UTC)."
    )
    tech_details_release_date: int | None = Field(
        None, description="First technical details release date (UTC)."
    )
    first_exploitation: int | None = Field(
        None, description="Earliest known exploitation date (UTC)."
    )


class SummaryStatsEntry(BaseModel):
    """Summary statistics entry."""

    min: float | None = Field(None, description="Minimum value.")
    max: float | None = Field(None, description="Maximum value.")
    avg: float | None = Field(None, description="Average value.")


class SummaryStats(BaseModel):
    """Summary statistics."""

    first_submission_date: SummaryStatsEntry | None = Field(
        None, description="Stats for first_submission_date."
    )
    last_submission_date: SummaryStatsEntry | None = Field(
        None, description="Stats for last_submission_date."
    )
    files_detections: SummaryStatsEntry | None = Field(
        None, description="Stats for file detections."
    )
    urls_detections: SummaryStatsEntry | None = Field(
        None, description="Stats for URL detections."
    )


class ActivityWindow(BaseModel):
    """Activity window."""

    confidence: str | None = Field(
        None, description="Confidence level in the first/last seen attribution."
    )
    description: str | None = Field(
        None, description="Description of the activity observation."
    )
    first_seen: int | None = Field(
        None, description="First time this activity was seen (UTC timestamp)."
    )
    last_seen: int | None = Field(
        None, description="Last time this activity was seen (UTC timestamp)."
    )
    value: str | None = Field(
        None,
        description="Date of observation in ISO format (e.g., 'YYYY-MM-DDTHH:mm:ssZ').",
    )


class VulnerabilityModel(BaseModel):
    """Model representing a Google Threat Intelligence Vulnerability."""

    aggregations: Aggregations | None = Field(
        None, description="IoC technical aggregations."
    )
    alt_names_details: list[AltNameDetail] | None = Field(
        None, description="Alternative names for this vuln."
    )
    analysis: str | None = Field(None, description="Analyst comments.")

    available_mitigation: list[str] | None = Field(
        None,
        description="list of available ways to reduce / mitigate the vulnerability.",
    )
    cve_id: str | None = Field(None, description="CVE identifier.")
    cvss: Cvss | None = Field(None, description="CVSS scores across v2, v3, v4.")
    cisa_known_exploited: CisaKnownExploited | None = Field(
        None, description="CISA Known Exploited info."
    )
    collection_type: str = Field(
        "vulnerability", description="The type of this object (always 'vulnerability')."
    )
    counters: Counters | None = Field(
        None, description="dictionary of counters of related objects."
    )
    creation_date: int = Field(..., description="UTC timestamp of object creation.")
    cwe: Cwe | None = Field(None, description="CWE classification.")
    date_of_disclosure: int | None = Field(None, description="UTC disclosure date.")
    days_to_report: int | None = Field(
        None, description="Days between disclosure and publication."
    )
    description: str | None = Field(
        None, description="Context or summary about the vulnerability."
    )
    cpes: list[CpeRange] | None = Field(
        None, description="CPE product objects affected by this vuln."
    )
    epss: Epss | None = Field(None, description="Exploit Prediction Scoring System.")
    executive_summary: str | None = Field(None, description="Executive-level summary.")
    exploitation: ExplotationDetails | None = Field(
        None, description="Detailed timeline of exploitation."
    )
    exploit_availability: str | None = Field(
        None, description="Exploit availability: Known, Public, etc."
    )
    exploitation_consequence: str | None = Field(
        None, description="Impact of exploiting this vulnerability."
    )
    exploitation_state: str | None = Field(
        None, description="Status of exploitation in the wild."
    )
    exploitation_vectors: list[str] | None = Field(
        None, description="Vectors through which vuln is exploited."
    )
    field_sources: list[FieldSource] | None = Field(
        None, description="Attribution sources for key fields."
    )
    first_seen_details: list[ActivityWindow] | None = Field(
        None, description="When activity was first observed."
    )
    last_modification_date: int = Field(
        ..., description="UTC timestamp of last update."
    )
    last_seen_details: list[ActivityWindow] | None = Field(
        None, description="When activity was last observed."
    )
    mve_id: str | None = Field(
        None, description="Mandiant Vulnerability and Exposure ID."
    )
    name: str = Field(..., description="Vulnerability's name.")
    origin: str | None = Field(
        None, description="Information origin, e.g. 'Google Threat Intelligence'."
    )
    predicted_risk_rating: str | None = Field(
        None,
        description="Vulnerability's predicted risk rating: Low, Medium, High, None.",
    )
    private: bool = Field(False, description="Whether this object is private.")
    priority: str | None = Field(None, description="Priority of the remediation.")
    recent_activity_relative_change: float | None = Field(
        None, description="Ratio change of recent activity."
    )
    recent_activity_summary: list[int] | None = Field(
        None, description="14-day activity histogram."
    )
    risk_factors: list[str] | None = Field(
        None,
        description="list of factors that impacted the vulnerability's risk_rating.",
    )
    risk_rating: str | None = Field(
        None, description="Risk rating: Low, Medium, High, Critical, Unrated."
    )
    sources: list[Source] | None = Field(
        None, description="list of information's suppliers."
    )
    source_regions_hierarchy: list[SourceRegion] | None = Field(
        None, description="Country or region from which the vulnerability originates."
    )
    status: str | None = Field(
        None, description="Object status: PENDING_RECOMPUTE or COMPUTED."
    )
    summary_stats: SummaryStats | None = Field(
        None, description="Statistical summary of indicators."
    )
    tags: list[str] | None = Field(None, description="list of tags.")
    tags_details: list[TagDetail] | None = Field(
        None, description="Detailed tags with confidence and timestamps."
    )
    targeted_industries_tree: list[TargetedIndustry] | None = Field(
        None, description="Industries affected."
    )
    targeted_regions_hierarchy: list[TargetedRegion] | None = Field(
        None, description="Regions targeted."
    )
    vendor_fix_references: list[VendorFixReference] | None = Field(
        None, description="References to available fixes."
    )
    version_history: list[VersionHistoryEntry] | None = Field(
        None, description="list of previous updates."
    )
    workarounds: list[str] | None = Field(
        None,
        description="list of strings explaining vulnerability's workaround / alternative fixes.",
    )


class Links(BaseModel):
    """Model representing links to related resources."""

    self: str
    next: str | None = Field(None, description="Link to the next page of results.")


class GTIVulnerabilityMeta(BaseModel):
    """Model representing metadata for a GTI threat actor."""

    count: int
    cursor: str | None = Field(None, description="Cursor for pagination.")


class GTIVulnerabilityData(BaseModel):
    """Model representing data for a GTI vulnerability."""

    id: str
    type: str | None = None
    links: Links | None = None
    attributes: VulnerabilityModel | None = None


class GTIVulnerabilityResponse(BaseModel):
    """Model representing a response containing GTI vulnerability data."""

    data: list[GTIVulnerabilityData]
    meta: GTIVulnerabilityMeta | None = Field(
        default=None,
        description="Metadata for the response. May be absent when no data is returned.",
    )
    links: Links

    @model_validator(mode="before")
    @classmethod
    def validate_data_structure(cls, values: Any) -> Any:
        """Ensure data field is properly structured."""
        if isinstance(values, dict) and "data" in values:
            data = values["data"]
            if not isinstance(data, list):
                values["data"] = [data] if data is not None else []
            else:
                valid_items = []
                for item in data:
                    if isinstance(item, dict) and "id" in item:
                        valid_items.append(item)
                values["data"] = valid_items
        return values
