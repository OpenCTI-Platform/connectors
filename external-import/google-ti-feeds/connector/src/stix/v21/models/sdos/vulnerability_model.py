"""The module defines the VulnerabilityModel class, which represents a STIX 2.1 Vulnerability object."""

from typing import Any, Dict, Optional

import pycti  # type: ignore
from connector.src.stix.v21.models.sdos.sdo_common_model import BaseSDOModel
from pydantic import Field, model_validator
from stix2.v21 import Vulnerability, _STIXBase21  # type: ignore


class VulnerabilityModel(BaseSDOModel):
    """Model representing a Vulnerability in STIX 2.1 format."""

    name: str = Field(..., description="A name used to identify the Vulnerability.")
    description: Optional[str] = Field(
        default=None,
        description="Context and details about the Vulnerability, including purpose and key characteristics.",
    )

    @model_validator(mode="before")
    @classmethod
    def generate_id(cls, data: Dict[str, Any]) -> Dict[str, Any]:
        """Generate ID regardless of whether one is provided."""
        if isinstance(data, dict) and "name" in data:
            data["id"] = pycti.Vulnerability.generate_id(name=data["name"])
        return data

    def to_stix2_object(self) -> _STIXBase21:
        """Convert the model to a STIX 2.1 object."""
        return Vulnerability(**self.model_dump(exclude_none=True))
