"""The module contains the OctiVulnerabilityModel class, which represents an OpenCTI Vulnerability."""

from datetime import datetime
from typing import Any, Dict, List, Optional

from connector.src.stix.v21.models.sdos.vulnerability_model import VulnerabilityModel


class OctiVulnerabilityModel:
    """Model for creating OpenCTI Vulnerability objects."""

    @staticmethod
    def create(
        name: str,
        cve_id: str,
        organization_id: str,
        marking_ids: list[str],
        description: Optional[str] = None,
        created: Optional[datetime] = None,
        modified: Optional[datetime] = None,
        base_score: Optional[float] = None,
        epss_score: Optional[float] = None,
        epss_percentile: Optional[float] = None,
        labels: Optional[List[str]] = None,
        external_references: Optional[List[Dict[str, Any]]] = None,
        **kwargs: Any,
    ) -> VulnerabilityModel:
        """Create a Vulnerability model.

        Args:
            name: The name of the vulnerability
            cve_id: CVE ID for the vulnerability
            organization_id: The ID of the organization that created this vulnerability
            marking_ids: List of marking definition IDs to apply to the vulnerability
            description: Description of the vulnerability
            created: Time the vulnerability was created
            modified: Time the vulnerability was last modified
            base_score: CVSS base score of the vulnerability
            epss_score: EPSS score of the vulnerability
            epss_percentile: EPSS percentile of the vulnerability
            labels: Labels to apply to the vulnerability
            external_references: External references related to the vulnerability
            **kwargs: Additional arguments to pass to VulnerabilityModel

        Returns:
            VulnerabilityModel: The created vulnerability model

        """
        custom_properties = {}

        if base_score is not None:
            custom_properties["x_opencti_base_score"] = base_score
        if epss_score is not None:
            custom_properties["x_opencti_epss_score"] = epss_score
        if epss_percentile is not None:
            custom_properties["x_opencti_epss_percentile"] = epss_percentile

        data = {
            "type": "vulnerability",
            "spec_version": "2.1",
            "custom_properties": custom_properties,
            "created": created or kwargs.pop("created", datetime.now()),
            "modified": modified or kwargs.pop("modified", datetime.now()),
            "name": name,
            "description": description,
            "labels": labels,
            "external_references": external_references,
            "created_by_ref": organization_id,
            "object_marking_refs": marking_ids,
            **kwargs,
        }

        return VulnerabilityModel(**data)
