from typing import List, Union

from stix2 import URL
from stix2 import Malware as stixMalware
from stix2 import Relationship
from zerofox.domain.malware import Malware


def malware_to_malware(
    now: str, entry: Malware
) -> List[Union[stixMalware, Relationship, URL]]:
    malware = stixMalware(
        name=f"Malware -- {entry.sha256}",
        labels=entry.tags,
        created=now,
        first_seen=entry.created_at,
        malware_types="unknown",
        is_family=False,
    )
    urls = [URL(value=c2) for c2 in entry.c2] if entry.c2 else []
    malware_families = (
        [
            stixMalware(name=f"Malware family:{family}", is_family=True)
            for family in entry.family
        ]
        if entry.family
        else []
    )

    return (
        [malware]
        + urls
        + [
            Relationship(
                source_ref=malware.id,
                target_ref=domain_name.id,
                relationship_type="communicates-with",
                start_time=entry.created_at,
            )
            for domain_name in urls
        ]
        + malware_families
        + [
            Relationship(
                source_ref=malware.id,
                target_ref=family.id,
                relationship_type="variant-of",
                start_time=entry.created_at,
            )
            for family in malware_families
        ]
    )
