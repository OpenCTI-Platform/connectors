opencti:
  url: 'http://localhost:8080'
  token: 'ChangeMe'
  ssl_verify: True

connector:
  id: 'ChangeMe'
  type: 'STREAM'
  name: 'Elastic Threat Intel Connector'
  scope: 'elastic'
  confidence_level: 80 # From 0 (Unknown) to 100 (Fully trusted)
  log_level: 'info'
  entity_name: 'Elastic ThreatIntel Cluster'
  entity_description: 'Elasticsearch detection engine cluster'
  live_stream_id: 'ChangeMe'

# =============================== Elastic Cloud ================================
# The cloud.id setting overwrites the `elastic.hosts`
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:
# The cloud.auth setting overwrites the `elastic.username` and
# `elastic.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

output.elasticsearch:
  # ---------------------------- Elasticsearch Output ----------------------------
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify an additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  hosts: ["localhost:9200"]
  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  #username: "elastic"
  #password: "changeme"
  ssl_verify: true

  # Use these settings to setup the index patterns and index lifecycle management
  # The defaults are listed below. An index MUST exist before the first write is made,
  # You can optionally do this manually. In all cases, the setup.ilm.alias will be used
  # as an index alias to which to write. If ILM is disabled, this will just point to
  # the base index matching the pattern.

  # Optional index name. The default is "threatintel" plus date
  # and generates [threatintel-]YYYY.MM.DD keys.
  # In case you modify this pattern you must update setup.template.name and setup.template.pattern accordingly.
  #index: "threatintel-%{+yyyy.MM.dd}"

# ====================== Index Lifecycle Management (ILM) ======================

# Configure index lifecycle management (ILM). These settings create a write
# alias and add additional settings to the index template. When ILM is enabled,
# output.elasticsearch.index is ignored, and the write alias is used to set the
# index name.
setup:
  ilm:
    enabled: True
    policy_name: threatintel
    rollover_alias: threatintel
    pattern: "%{now/d}-000001"
    overwrite: False
  template:
    enabled: True
    name: threatintel
    pattern: threatintel-*
    overwrite: False

elastic:
  # ---------------------------- Import Settings ----------------------------
  ## Currently only STIX indicators are supported
  indicator_types: ['stix']
  import_label: 'elastic' # can be "*" to import everything
  #import_from_date: '2021-01-01 00:00:00' # (optional) defaults to now()

  # (optional) TLP to use to filter indicators from OpenCTI to Elastic, defaults to empty
  #max_tlp: "TLP:RED"

  # ---------------------------- Sightings Settings ----------------------------

  # (optional) This is to fine tune how we find signals generated by the detection engine
  # These are all the defaults, you don't need to change anything or even include it.
  # You could modify the query if you wanted to add some additional criteria.
  # You could also change the signal_index pattern if you had a non-default space in
  # Kibana that you wanted to use to limit the results
  # signals:
  #   query_interval: '5m'
  #   lookback_interval: '5m'
  #   signal_index: '.siem-signals-*'
  #   query: >
  #     {
  #       "query": {
  #         "bool": {
  #           "must": {
  #             "match": { "signal.rule.type": "threat_match" }
  #           }
  #         }
  #       }
  #     }
  # (optional) TLP to use when importing sightings from Elastic, defaults to empty
  #sightings_tlp:
